<!DOCTYPE html>
<html>
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-gH2yIJqKdNHPEq0n4Mqa/HGKIhSkIHeL5AyhkYV8i59U5AR6csBvApHHNl/vI1Bx" crossorigin="anonymous">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/js/bootstrap.bundle.min.js" integrity="sha384-A3rJD856KowSb7dwlZdYEkO39Gagi7vIsF0jrRAoQmDKKtQBHUuLZ9AsSv4jD4Xa" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.5/dist/umd/popper.min.js" integrity="sha384-Xe+8cL9oJa6tN/veChSP7q+mnSPaj5Bcu9mPX5F5xIGE0DVittaqT5lorf0EI7Vk" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/js/bootstrap.min.js" integrity="sha384-ODmDIVzN+pFdexxHEHFBQH3/9/vQ9uori45z4JjnFsRydbmQbmL5t1tQ0culUzyK" crossorigin="anonymous"></script>
  <head>
    <meta charset="UTF-8">
    <script type="text/javascript" src="https://cdn.rawgit.com/ethereum/web3.js/develop/dist/web3.min.js"></script>
  </head>


  <body>
    <center>
      <b>
        <p style="font-size:50px">
          DiSect v1
        </p>
      </b>
    </center>
    <center>
      <button type="button" class="btn btn-dark" data-bs-toggle="modal" data-bs-target="#exampleModal">
        Share with Disect ğŸ”ª
      </button>
    </center>

    <!-- Modal -->
    <div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
      <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable">
        <div class="modal-content">
          <div class="modal-header border-0">
            <h5 class="modal-title" id="exampleModalLabel">Add addresses to split with</h5>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
          </div>
          <div class="modal-body">
            <div class="input-group">
              <input type="text" id="add-address" class="form-control" placeholder="Add address" aria-label="Input group example" aria-describedby="btnGroupAddon">
            </div>
            <ul id="added-addresses" class="list-group list-group-flush">
            </ul>
          </div>
          <div class="modal-footer border-0">
            <button type="button" class="btn btn-danger" data-bs-dismiss="modal">Close</button>
            <button onclick="createMultisigAndSplit()" type="button" class="btn btn-dark">Disect ğŸ”ª</button>
          </div>
        </div>
      </div>
    </div>
  </body>
    <script type="text/javascript">
      const addresses = [];
      /*
      // TODO: REMOVE
      window.addEventListener("load", async function() {
      });
      */
      async function invokeMetaMask() {
        if (typeof window.ethereum !== "undefined") {
          //console.log("Web3 Detected! " + web3.currentProvider.constructor.name)
          //window.web3 = new Web3(web3.currentProvider);

          const accounts = await window.ethereum.request({
            method: "eth_requestAccounts",
          });
          const account = accounts[0];
          console.log(accounts);
        } else {
          console.log("No Web3 Detected... get Metamask");
        }
      }
      function getBalance() {
        var wei, balance
        try {
          web3.eth.getAccounts(function(err, accounts) {
            web3.eth.getBalance(accounts[0], function(error, wei) {
              if (!error) {
                var balance = web3.fromWei(wei, "ether");
                document.getElementById("output").innerHTML = balance + " ETH";
              }
            })
          });
        } catch (err) {
          document.getElementById("output").innerHTML = err;
        }
      }
      async function createMultisigAndSplit() {
        console.log("Inside createMultiSigAndSplit");
        console.log("Invoking metamask");
        await invokeMetaMask();
      }
      const addAddressInput = document.getElementById("add-address");
      addAddressInput.addEventListener("keyup", function(event) {
        if (event.key === "Enter") {
          // Do work
          const address = document.getElementById("add-address").value;
          if(address.length) {
            // TODO: Add validations for the entered address
            addresses.push(address);
            console.log("This is the addresses array: ", addresses);
            document.getElementById("add-address").value = null;
            let addressesList = "";
            addresses.forEach((address) => {
              addressesList += `<li class="list-group-item">${address}</li>`;
            });
            document.getElementById("added-addresses").innerHTML = addressesList;
          }
        }
      });
    </script>
</html>